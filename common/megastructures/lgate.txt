# see README.txt for example

# Disabled L-Gate
lgate_base = {
	entity = "deactivated_gatebuilder_gateway_entity"
	# entity = "gatebuilder_01_gateway_entity"
	construction_entity = "gateway_portal_entity"
	portrait = "GFX_megastructure_construction_background"
	place_entity_on_planet_plane = no
	# build_outside_gravity_well = yes
	show_galactic_map_icon = no
	
	potential = {
		always = no
	}
	upgrade_from = { lgate_open	}

	construction_blocks_others = no

	bypass_type = lgate
}

lgate_open = {
	entity = "gatebuilder_01_gateway_entity"
	construction_entity = "gateway_portal_entity"
	portrait = "GFX_megastructure_construction_background"
	place_entity_on_planet_plane = no
	build_outside_gravity_well = yes
	show_galactic_map_icon = no

	build_time = 1800
	resources = {
		category = megastructures
		cost = {
			alloys = 2500
			nanites = 500
		}
	}
	construction_blocks_others = no
	construction_blocked_by_others = no

	potential = { 
		AND = {
			has_technology = tech_gateway_construction
			has_technology = tech_lgate_construction
		}
	}
	
	possible = {
		exists = starbase
		custom_tooltip = {
			fail_text = "requires_inside_border"
			is_inside_border = from
		}
		custom_tooltip = {
			fail_text = "requires_surveyed_system"
			NOT = {
				any_system_planet = {
					is_surveyed = {
						who = prev.from
						status = no
					}
				}
			}
		}
		custom_tooltip = {
			fail_text = "requires_no_existing_gateway"
			NOR = {
				has_megastructure = lgate_base
			}
		}
		custom_tooltip = {
			fail_text = "requires_technology_gateway_construction"
			from = {
				has_technology = tech_lgate_construction
			}
		}
	}
	upgrade_from = { lgate_base	}

	placement_rules = {
		planet_possible = {
			custom_tooltip = {
				fail_text = "not_in_lcluster"
				root = {
					has_star_flag = lcluster
				}
			}
		} # use these for all non-star megastructures
	}

	bypass_type = lgate
	on_build_complete = {
		random_system_megastructure = {
			limit = {
				is_megastructure_type = lgate_base
				NOT = { has_megastructure_flag = lgate_activated }
			}
			is_megastructure_type = lgate_base
		}
		from = { 
			country_event = { id = apoc.13 }
			country_event = { id = apoc.11 }
		}
		root = { set_star_flag = lgate }
	}
}
