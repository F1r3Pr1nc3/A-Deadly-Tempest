# see README.txt for example

# Active L-Gate
lgate_base = {
	entity = "gatebuilder_01_gateway_entity"
	construction_entity = "gateway_portal_entity"
	portrait = "GFX_megastructure_construction_background"
	place_entity_on_planet_plane = no
	#build_outside_gravity_well = yes
	show_galactic_map_icon = no
	
	potential = { always = no }
	upgrade_from = { lgate_disabled }

	construction_blocks_others = no

	bypass_type = lgate
}

# Disabled L-Gate
lgate_disabled = {
	entity = "deactivated_gatebuilder_gateway_entity"
	construction_entity = "gateway_portal_entity"
	portrait = "GFX_megastructure_construction_background"
	place_entity_on_planet_plane = no
	build_outside_gravity_well = yes
	show_galactic_map_icon = no

	build_time = 1800
	resources = {
		category = megastructures
		cost = {
			alloys = 2500
			nanites = 500
		}
	}
	construction_blocks_others = no
	construction_blocked_by_others = no

	potential = { has_technology = tech_lgate_construction }
	
	# trigger, scope: galactic object, from: country
	possible = {
		exists = starbase
		custom_tooltip = {
			fail_text = "requires_inside_border"
			is_inside_border = from
		}
		custom_tooltip = {
			fail_text = "requires_surveyed_system"
			NOT = {
				any_system_planet = {
					is_surveyed = {
						who = prev.from
						status = no
					}
				}
			}
		}
		custom_tooltip = {
			fail_text = "requires_no_existing_gateway"
			NOR = {
				has_star_flag = lgate
				has_megastructure = lgate_disabled
				has_megastructure = lgate_base
			}
		}
		custom_tooltip = {
			fail_text = "not_in_lcluster"
			NOT = { has_star_flag = lcluster }
		}
		custom_tooltip = {
			fail_text = "requires_tech_lgate_construction"
			from = { has_technology = tech_lgate_construction }
		}

	}
	# root = system
	# from = country
	placement_rules = {
		# those would be ignored since the gateway is being "free-placed" between the inner and outer radius of the system
	}

	ai_weight = {
		factor = 5
		modifier = {
			factor = 0.1
			starbase = { NOT = { has_starbase_size >= starbase_starfortress } }
		}	

		modifier = {
			factor = 0.1
			any_neighbor_system = {
				exists = owner
				NOT = { 
					owner = { is_same_value = from } 
				}
			}
		}
		modifier = {
			factor = 0
			any_neighbor_system = { 
				has_star_flag = lgate
			}
		}
		modifier = {
			factor = 3.0
			is_star_class = sc_black_hole
		}
	}

	bypass_type = lgate
	#effects, scope: galactic object, from: country, fromfrom: megastructure instance
	on_build_complete = {
		# Works, but let's open the gate over the time event?
		if = {
			limit = { exists = owner }
			fromfrom = { CmtEffectOpenLgate = yes }
		}
		set_star_flag = lgate
	}
}
