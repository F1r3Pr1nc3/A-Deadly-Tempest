#########################################
#
# on_action_events patch rebuild outpost for orphaned colonies
# Fix multi colony by Fireprince
#
#########################################
namespace = action

# Fix (Vanilla) splitted system can lead to unserveyable: https://forum.paradoxplaza.com/forum/threads/stellaris-system-with-dual-planets-ownership-and-no-starbases-are-stuck.1508942/# post-28052496
# on_monthly_pulse
# Compare action.85		# Flip planets to starbase owner
# Compare marauder.515	# Marauder planet liberated
event = {
	id = action.90
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		any_playable_country = {
			# any_system_within_border = {
			# 	NOT = { exists = starbase }
			# }
			any_owned_planet = {
				is_controlled_by = prev
				solar_system = { NOT = { exists = starbase } }
			}
		}
	}
	immediate = {
		every_system = {
			limit = {
				NOT = { exists = starbase }
				any_system_colony = {
					has_ground_combat = no
					owner = { is_default_or_fallen = yes }
					solar_system = {
						NOR = {
							any_fleet_in_system = {
								exists = owner
								owner = {
									NOT = { is_same_empire = prevprevprev.owner }
									OR = {
										is_hostile = prevprevprev.owner
										is_at_war_with = prevprevprev.owner
									}
								}
								is_cloaked = no
							}
							any_fleet_in_system = {
								exists = controller
								controller = {
									NOT = { is_same_empire = prevprevprev.owner }
									OR = {
										is_hostile = prevprevprev.owner
										is_at_war_with = prevprevprev.owner
									}
								}
								is_cloaked = no
							}
							any_system_colony = {
								NOT = { is_planet = prevprev }
								owner = {
									NOT = { is_same_empire = prevprevprev.owner }
									is_default_or_fallen = yes
									OR = {
										is_hostile = prevprevprev.owner
										is_at_war_with = prevprevprev.owner
									}
								}
								NAND = {
									exists = controller
									controller = { is_same_empire = prevprevprev.owner }
								}
							}
						}
						OR = {
							is_capital_system = yes
							prev = {
								OR = {
									is_homeworld = yes
									has_modifier = instability_join_revolt
									owner = { has_origin = origin_demonic_incursion }
									owner = { has_country_flag = former_owner@prevprevprev }
								}
							}
							NOR = {
								prev = { is_occupied_flag = yes }
								any_system_colony = {
									NOT = { is_planet = prevprev }
									OR = {
										merg_is_habitat = no
										prevprev = { merg_is_habitat = yes }
									}
									owner = {
										NOR = {
											is_same_empire = prevprevprev.owner
											has_country_flag = former_owner@prev
										}
										is_default_or_fallen = yes
									}
									NAND = {
										exists = controller
										controller = { is_same_empire = prevprevprev.owner }
									}
								}
							}
						}
					}
				}
			}
			random_system_colony = {
				limit = {
					exists = owner
					has_ground_combat = no
					owner = { is_default_or_fallen = yes }
					solar_system = {
						NOR = {
							any_fleet_in_system = {
								exists = owner
								owner = {
									NOT = { is_same_empire = prevprevprev.owner }
									OR = {
										is_hostile = prevprevprev.owner
										is_at_war_with = prevprevprev.owner
									}
								}
								is_cloaked = no
							}
							any_fleet_in_system = {
								exists = controller
								controller = {
									NOT = { is_same_empire = prevprevprev.owner }
									OR = {
										is_hostile = prevprevprev.owner
										is_at_war_with = prevprevprev.owner
									}
								}
								is_cloaked = no
							}
							any_system_colony = {
								NOT = { is_planet = prevprev }
								owner = {
									NOT = { is_same_empire = prevprevprev.owner }
									is_default_or_fallen = yes
									OR = {
										is_hostile = prevprevprev.owner
										is_at_war_with = prevprevprev.owner
									}
								}
								NAND = {
									exists = controller
									controller = { is_same_empire = prevprevprev.owner }
								}
							}
						}
						OR = {
							is_capital_system = yes
							prev = {
								OR = {
									is_homeworld = yes
									has_modifier = instability_join_revolt
									owner = { has_origin = origin_demonic_incursion }
									owner = { has_country_flag = former_owner@prevprevprev }
								}
							}
							NOR = {
								prev = { is_occupied_flag = yes }
								any_system_colony = {
									NOT = { is_planet = prevprev }
									OR = {
										merg_is_habitat = no
										prevprev = { merg_is_habitat = yes }
									}
									owner = {
										NOR = {
											is_same_empire = prevprevprev.owner
											has_country_flag = former_owner@prev
										}
										is_default_or_fallen = yes
									}
									NAND = {
										exists = controller
										controller = { is_same_empire = prevprevprev.owner }
									}
								}
							}
						}
					}
				}
				# Fruitful Origin - the outpost is being created for the first time
				if = {
					limit = {
						has_planet_flag = seed_pods_colonization
					}
					planet_event = { id = origin.7400 }
				}
				# else, fire the normal "Outpost Rebuilt!" event
				else = {
					planet_event = { id = action.91 }
				}
			}
		}
	}
}

# planet_event = {
# 	id = action.91
# 	title = action.91.name
# 	desc = action.91.desc
# 	picture = GFX_evt_star_chart
# 	show_sound = event_default
# 	location = root
# 	is_triggered_only = yes
# 	immediate = {
# 		solar_system = {
# 			if = {
# 				limit = {
# 					root.owner = { is_country_type = awakened_marauders }
# 				}
# 				create_starbase = {
# 					size = starbase_marauder
# 					owner = root.owner
# 					effect = {
# 						fleet = {
# 							every_owned_ship = {
# 								reduce_hp_percent = 98
# 								set_disabled = no
# 							}
# 						}
# 					}
# 				}
# 			} else = {
# 				create_starbase = {
# 					size = starbase_outpost
# 					owner = root.owner
# 				}
# 				if = {
# 					limit = {
# 						root.owner = {
# 							is_specialist_subject_type = { TYPE = bulwark }
# 						}
# 					}
# 					starbase = {
# 						add_starbase_component = { component = "STARBASE_AURA_BULWARK_ARRAY" }
# 					}
# 				}
# 			}
# 		}
# 	}
# 	option = {
# 		name = OK
# 		tooltip = {
# 			solar_system = {
# 				create_starbase = {
# 					size = starbase_outpost
# 					owner = root.owner
# 				}
# 			}
# 		}
# 	}
# }
