#	on_fail
#	this = country (project owner)
#	from = project creation scope (usually equals location)

special_project = {
	key = LCLUSTER_PROJECT
	cost = 0
	days_to_research = 180
	tech_department = engineering_technology
	picture = GFX_evt_surreal_visions
	icon = "gfx/interface/icons/situation_log/situation_log_planet.dds"

	event_scope = ship_event

	requirements = {
		shipclass_science_ship = 1
		leader = scientist
		skill = 3 # it should be really not that easy (so AI could have more problems with this)
	}

	on_success = {
		owner = { country_event = { id = distar.10950 } }
	}

	on_fail = {
	}

	on_start = {
	}

	abort_trigger = {
		has_global_flag = l_cluster_opened # someone else got to it first
	}
}

special_project = {
	key = TAME_LDRAGON_PROJECT
	tech_department = society_technology
	days_to_research = 180
	timelimit = -1
	picture = GFX_evt_space_dragon_young
	icon = "gfx/interface/icons/situation_log/situation_log_quest.dds"

	event_scope = ship_event

	requirements = {
		shipclass_science_ship = 1
		leader = scientist
		skill = 3 # it should be really not that easy (so AI could have more problems with this)
	}

	on_success = {
		owner = { country_event = { id = distar.13035 } }
		solar_system.star = { set_planet_flag = ldragon_recruited }
	}

	abort_trigger = {
		fromfrom = { # system star
			OR = {
				has_planet_flag = ldragon_recruited
				AND = {
					solar_system = {
						any_fleet_in_system = {
							exists = owner
							owner = { is_country_type = ldragon_country }
							is_in_combat = yes
						}
					}
				}
			}
		}
	}
}
