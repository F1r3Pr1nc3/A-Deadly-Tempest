#my_casus_belli = {
#	potential = { ... }		# trigger to make some CBs invalid for certain types of countries; this = attacker (CB owner); default: { always = yes }
#	is_valid = { ... }		# trigger, evaluated daily to check if CB should be created or destroyed automatically, does not affect CBs granted via script;
#								# this = attacker (CB owner), from = defender (target country); default: { always = yes }
#	destroy_if = { ... }	# trigger, evaluated daily to destroy CBs that have been granted via script ahead of expiration date;
#								# this = attacker (CB owner), from = defender (target country); default: { always = no }
#	show_notification = no/yes	# optional (default = yes), flag to control whether this CB will generate a notification (to avoid duplicate
# 								# notification when a claim CB is generated)
#}
cb_lgate_port = {
	show_in_diplomacy = yes
	show_notification = no
	#  (Country scope, THIS = casus belli owner, FROM = casus belli target)
	potential = {
		# OR = {
		# 	is_country_type = default
		# 	is_country_type = awakened_fallen_empire
		# 	is_country_type = ascended_empire	#_ZOFE
		# 	is_country_type = lost_empire		#_ZOFE
		# }
		is_country_type_with_subjects = yes # better compatiblity
		NOR = {
			has_global_flag = lgates_activated_globally
			is_in_federation_with = from
		}
		is_subject = no
	}
	is_valid = {
		exists = from
		NOR = {
			has_global_flag = lgates_activated_globally
			is_overlord_to = from
			has_authority = auth_machine_intelligence
		}
		# OR = {
		# 	is_subject = no
		# 	overlord = { NOT = { is_same_value = from } }
		# }
		# is_country_type = awakened_fallen_empire
		# has_closed_borders = root
		from = { controls_lcluster = yes } # can_set_lcluster_policiy = yes
	}
}
