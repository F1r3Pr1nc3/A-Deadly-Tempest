###############################################
###############################################
#####                                     #####
#####     Nanites Goo Special Events      #####
#####        For A Deadly Tempest         #####
#####    Written by His Dread Monarch     #####
#####          and FirePrince             #####
###############################################
###############################################
namespace = a_deadly_tempest

####################################
# Nanites spawn more ships over time
####################################
## Reinforcements 1
event = {
	id = a_deadly_tempest.3
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		exists = event_target:nanite_factory
		event_target:nanite_factory = {
			is_ship_size = graygoo_factory
		}
	}
	immediate = {
		country_event = {
			id = graygoo.3
			days = 3
		}
	}
}

### Nanites
# Mothership creates ships
country_event = {
	id = a_deadly_tempest.105
	hide_window = yes
	is_triggered_only = yes
	# mean_time_to_happen = { months = 2 }
	trigger = {
		exists = event_target:graygoo_country
		is_same_empire = event_target:graygoo_country
		# any_owned_fleet = {
		# 	has_fleet_flag = nanite_mother_ship
		# 	any_ship = { is_ship_size = graygoo_mothership }
		# }
	}
	immediate = {
		every_owned_fleet = {
			limit = {
				# has_fleet_flag = nanite_mother_ship
				is_in_combat = no
				any_ship = {
					is_ship_size = graygoo_mothership
				}
			}
			if = {
				limit = {
					end_game_years_passed >= -10
					num_ships < 41
				}
				# Motherships create increased ship numbers during galactic crisis
				random_list = {
					10 = {
						CmtEffectCreateShip_GraygooMother = yes
					}
					90 = {
						CmtEffectCreateShip_GraygooInterdictor = yes
					}
				}
			}
			else_if = {
				limit = {
					mid_game_years_passed >= -10
					num_ships < 21
				}
				CmtEffectCreateShip_GraygooInterdictor = yes
			}
			else_if = {
				limit = {
					num_ships < 11
				}
				CmtEffectCreateShip_GraygooInterdictor = yes
			}
			prev = {
				# Save game compatibilty
				if = {
					limit = {
						has_country_flag = adtFlagActiveMothershipRebuild
						NOT = { has_global_flag = CmtFlagLgateOpenedNow } # TODO replace
					}
					country_event = {
						id = a_deadly_tempest.105
						days = 60
					}
				}
			}
		}
	}
}

# Gray Goo Friendship
country_event = {
	id = a_deadly_tempest.137
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		event_target:graygoo_country = {
			# Pre-Ketlings
			if = {
				limit = {
					exists = event_target:ratling_pre_space_country
				}
				set_faction_hostility = {
					set_hostile = no
					#set_neutral = no
					set_friendly = yes
					target = event_target:ratling_pre_space_country
				}
				event_target:ratling_pre_space_country = {
					set_faction_hostility = {
						set_hostile = no
						#set_neutral = no
						set_friendly = yes
						target = prev
					}
				}
			}
			# Scrapperbot
			if = {
				limit = {
					exists = event_target:scavenger_bot_country
				}
				set_faction_hostility = {
					set_hostile = no
					#set_neutral = no
					set_friendly = yes
					target = event_target:scavenger_bot_country
				}
				event_target:scavenger_bot_country = {
					set_faction_hostility = {
						set_hostile = no
						#set_neutral = no
						set_friendly = yes
						target = prev
					}
				}
			}
			# mardak_vol
			if = {
				limit = {
					exists = event_target:mardak_vol_country
				}
				set_faction_hostility = {
					set_hostile = no
					#set_neutral = no
					set_friendly = yes
					target = event_target:mardak_vol_country
				}
				event_target:mardak_vol_country = {
					set_faction_hostility = {
						set_hostile = no
						#set_neutral = no
						set_friendly = yes
						target = prev
					}
				}
			}
			# Gatebuilders
			if = {
				limit = {
					is_country_type = gate_builders
					exists = event_target:ratling_country
				}
				set_faction_hostility = {
					set_hostile = no
					#set_neutral = no
					set_friendly = yes
					target = event_target:ratling_country
				}
				event_target:ratling_country = {
					set_faction_hostility = {
						set_hostile = no
						#set_neutral = no
						set_friendly = yes
						target = prev
					}
				}
			}
		}
	}
}

# Last battle, defend the base (from graygoo.162) (by FirePrince)
country_event = {
	id = a_deadly_tempest.96
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		exists = event_target:graygoo_country
		exists = event_target:nanite_factory
		event_target:nanite_factory = {
			is_ship_size = graygoo_factory
		}
	}
	immediate = {
		event_target:graygoo_country = {
			if = {
				limit = {
					NOT = {
						exists = event_target:main_star
					}
				}
				if = {
					limit = {
						NOT = {
							exists = event_target:lcluster_factory_system
						}
					}
					event_target:nanite_factory = {
						solar_system = {
							save_event_target_as = lcluster_factory_system
							random_system_planet = {
								limit = {
									has_planet_flag = main_star
								}
								save_event_target_as = main_star
							}
						}
					}
				}
				else = {
					event_target:lcluster_factory_system = {
						random_system_planet = {
							limit = {
								has_planet_flag = main_star
							}
							save_event_target_as = main_star
						}
					}
				}
			}
			if = { limit = { check_variable = { which = fleetCounter value > 0 } }
				set_variable = { which = fleetCounter value = 8 } log = "set fleetCounter [graygoo_country.fleetCounter]"
			}

			every_owned_fleet = {
				limit = {
					exists = solar_system
					solar_system = {
						has_star_flag = lcluster
						NOT = {
							is_same_value = event_target:lcluster_factory_system
						}
					}
				}
				solar_system = {
					random_system_planet = {
						limit = {
							OR = {
								is_planet_class = pc_gray_goo
								is_planet_class = pc_gaia
							}
						}
						prevprev = {
							if = { limit = { has_fleet_flag = nanite_mother_ship }
								log = "shoal Guard [This.GetFleetName] returning to base [main_star.Planet.GetName] from: [Prev.GetName]"
								remove_auto_move_target = yes
								clear_fleet_actions = this
								queue_actions = {
									# orbit_planet = event_target:main_star
									move_to = event_target:main_star
								}
								auto_move_to_planet = {
									target = prev
									clear_auto_move_on_arrival = no
									# arrival_effect = shoal_continue_journey
								}
							} else_if = { limit = { OR = { has_auto_move_target = yes num_ships > 1 } }
								log = "shoal [This.GetFleetName] returning to base [main_star.Planet.GetName] from: [Prev.GetName]"
								remove_auto_move_target = yes
								clear_fleet_actions = this
								event_target:graygoo_country = { change_variable = { which = fleetCounter value = 1 } }
								queue_actions = {
									move_to = event_target:main_star
									effect = {
										id ="graygoo_SetAuxParam_Roamer[fleetCounter@graygoo_country]"
										CmtFleetSetAuxParam_Roamer = { NUM = fleetCounter@event_target:graygoo_country }
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

# Gatebuilders hostility
# From, This = Owner
country_event = {
	id = a_deadly_tempest.162
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = yes
		# OR = {
		# 	exists = event_target:graygoo_country
		# 	exists = event_target:gate_builders
		# }
	}

	immediate = {
		set_country_flag = gate_builder_diplomacy_engaged
		set_country_flag = gate_builders_hostility
		if = { limit = { NOT = { exists = event_target:graygoo_country } }
			random_country = {
				limit = { is_country_type = gate_builders }
				save_global_event_target_as = graygoo_country
			}
		}
		log = "- This: [This.GetName] gets hostility to [graygoo_country.GetName]"

		event_target:graygoo_country = {
			set_faction_hostility = {
				target = prev
				set_neutral = no
				set_friendly = no
				set_hostile = yes
			}
			add_resource = {
				minerals = 1000
				energy = 10000
			}
			country_event = { id = a_deadly_tempest.105 days = 1800 } # Mothership creates ships
			country_event = { id = a_deadly_tempest.96 } # Run Patrol
			set_country_flag = adtFlagActiveMothershipRebuild
		}
	}
}


### Federation joined event
#This = Federation leader
#From = Joining member
country_event = {
	id = a_deadly_tempest.13079
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		NOT = {
			has_global_flag = l_cluster_opened
		}
		federation = {
			any_member = {
				has_country_flag = encountered_first_lgate
			}
		}
	}
	immediate = {
		from = {
			save_event_target_as = fed_joiner
		}
		federation = {
			every_member = {
				limit = {
					NOT = {
						has_country_flag = encountered_first_lgate
					}
				}
				country_event = {
					id = a_deadly_tempest.13080
					days = 5
				}
			}
		}
	}
}

# TODO NEEDS TO TEST (by FirePrince)
# This = country without l-gate
country_event = {
	id = a_deadly_tempest.13080
	title = "apoc.1.name"

	desc = {
		text = apoc.3.desc
		trigger = {
			NOT = {
				has_country_flag = encountered_first_gateway
			}
		}
	}
	desc = {
		text = apoc.3.b.desc
		trigger = {
			has_country_flag = encountered_first_gateway
		}
	}
	
	picture = GFX_evt_drifting_gateway
	show_sound = event_radio_chatter
	is_triggered_only = yes
	trigger = {
		NOR = {
			has_country_flag = encountered_first_lgate
			has_event_chain = "l_cluster_chain"
		}
		has_federation = yes
		federation = {
			any_member = {
				has_country_flag = encountered_first_lgate
				any_system_within_border = {
					has_star_flag = lgate
					any_system_megastructure = {
						OR = {
							is_megastructure_type = lgate_base
							is_megastructure_type = lgate_disabled
						}
					}
				}
			}
		}
	}
	immediate = {
		federation = {
			random_member = {
				limit = {
					has_country_flag = encountered_first_lgate
					any_system_within_border = {
						has_star_flag = lgate
					}
				}
				random_system_within_border = {
					limit = {
						has_star_flag = lgate
						any_system_megastructure = {
							OR = {
								is_megastructure_type = lgate_base
								is_megastructure_type = lgate_disabled
							}
						}
					}
					save_event_target_as = gateway_system
				}
			}
		}
		set_country_flag = encountered_first_lgate
	}
	location = event_target:gateway_system
	option = {
		name = INTRIGUING
		start_lcluster_chain = yes
	}
}
